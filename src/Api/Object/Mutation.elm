-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.Mutation exposing (..)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.Union
import CustomScalars
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


type alias JoinRequiredArguments =
    { email : String
    , nonce : String
    , password : String
    }


join :
    JoinRequiredArguments
    -> SelectionSet CustomScalars.Jwt Api.Object.Mutation
join requiredArgs =
    Object.selectionForField "CustomScalars.Jwt" "join" [ Argument.required "email" requiredArgs.email Encode.string, Argument.required "nonce" requiredArgs.nonce Encode.string, Argument.required "password" requiredArgs.password Encode.string ] (CustomScalars.codecs |> Api.Scalar.unwrapCodecs |> .codecJwt |> .decoder)


type alias LoginRequiredArguments =
    { email : String
    , password : String
    }


login :
    LoginRequiredArguments
    -> SelectionSet CustomScalars.Jwt Api.Object.Mutation
login requiredArgs =
    Object.selectionForField "CustomScalars.Jwt" "login" [ Argument.required "email" requiredArgs.email Encode.string, Argument.required "password" requiredArgs.password Encode.string ] (CustomScalars.codecs |> Api.Scalar.unwrapCodecs |> .codecJwt |> .decoder)


logout : SelectionSet Bool Api.Object.Mutation
logout =
    Object.selectionForField "Bool" "logout" [] Decode.bool


logoutAll : SelectionSet Bool Api.Object.Mutation
logoutAll =
    Object.selectionForField "Bool" "logoutAll" [] Decode.bool


type alias SignupRequiredArguments =
    { ciph : String
    , nonce : String
    , password : String
    }


signup :
    SignupRequiredArguments
    -> SelectionSet CustomScalars.Jwt Api.Object.Mutation
signup requiredArgs =
    Object.selectionForField "CustomScalars.Jwt" "signup" [ Argument.required "ciph" requiredArgs.ciph Encode.string, Argument.required "nonce" requiredArgs.nonce Encode.string, Argument.required "password" requiredArgs.password Encode.string ] (CustomScalars.codecs |> Api.Scalar.unwrapCodecs |> .codecJwt |> .decoder)
